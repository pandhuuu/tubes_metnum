#include <iostream>
#include <iomanip>
#include <vector>
using namespace std;

// Fungsi untuk menghitung nilai y berdasarkan x dan y
double fungsi(double x, double y) {
    return x + 2 * x * y + 3;
}

// Fungsi utama untuk diferensiasi maju
void diferensiasiMaju(double x, double y, double h, int n) {
    // Print header tabel
    cout << setw(10) << "Iterasi" << setw(10) << "x" << setw(10) << "y" << setw(10) << "y'" << endl;

    // Lakukan iterasi sebanyak n kali
    for (int i = 0; i <= n; i++) {
        // Hitung turunan maju (y')
        double dy = fungsi(x, y);

        // Print nilai saat ini
        cout << setw(10) << i << setw(10) << x << setw(10) << y << setw(10) << dy << endl;

        // Update nilai x dan y
        x = x + h;
        y = y + dy * h;
    }
}

// Fungsi untuk menghitung turunan menggunakan metode diferensiasi tengah
double turunan_tengah(double x, double y, double h) {
    double y_forward = fungsi(x + h, y);
    double y_backward = fungsi(x - h, y);
    return (y_forward - y_backward) / (2 * h);
}

// Fungsi untuk diferensiasi tengah
void diferensiasiTengah(double x, double y, double h) {
    // Hitung nilai y untuk x yang diberikan
    double nilai_y = fungsi(x, y);

    // Hitung turunan menggunakan metode diferensiasi tengah
    double nilai_turunan = turunan_tengah(x, y, h);

    // Tampilkan hasil dalam bentuk tabel
    cout << setw(10) << "x" << setw(10) << "y" << setw(15) << "y(x)" << setw(20) << "Turunan Tengah" << endl;
    cout << setw(10) << x << setw(10) << y << setw(15) << nilai_y << setw(20) << nilai_turunan << endl;
}

// Fungsi untuk menghitung turunan menggunakan metode diferensiasi mundur
double backward_difference(double x, double y, double h) {
    return (fungsi(x, y) - fungsi(x - h, y)) / h;
}

// Fungsi untuk diferensiasi mundur
void diferensiasiMundur(double x, double y, double h, int n) {
    // Vektor untuk menyimpan hasil
    vector<vector<double>> results;

    // Menghitung diferensiasi mundur untuk setiap iterasi
    for (int i = 0; i < n; ++i) {
        double derivative = backward_difference(x, y, h);
        results.push_back({ x, y, derivative });

        // Update nilai x dan y
        x -= h;  // Memundurkan x dengan langkah h
        y = fungsi(x, y);  // Menghitung nilai y baru berdasarkan persamaan
    }

    // Menampilkan hasil dalam bentuk tabel
    cout << setw(10) << "Iterasi" << setw(10) << "x" << setw(10) << "y" << setw(20) << "Turunan Mundur" << endl;
    for (int i = 0; i < results.size(); ++i) {
        cout << setw(10) << i + 1 << setw(10) << results[i][0] << setw(10) << results[i][1] << setw(20) << results[i][2] << endl;
    }
}

int main() {
    int pilihan;
    cout << "=> DIFERENSIASI <=" << endl;
    cout << endl;
    cout << "Selesaikan Persamaan berikut dengan Teknik Differensiasi" << endl;
    cout << "y = x^2 + 2xy + 3" << endl;
    cout << endl;
    cout << "Silahkan Pilih Teknik Diferensiasi" << endl;
    cout << "1. Diferensiasi Maju" << endl;
    cout << "2. Diferensiasi Tengah" << endl;
    cout << "3. Diferensiasi Mundur" << endl;

    cout << endl;
    cout << "Masukkan Pilihan Anda : ";
    cin >> pilihan;

    double x, y, h;
    int n;

    switch (pilihan) {
    case 1:
        cout << endl;
        cout << "==========================" << endl;
        cout << "==DIFFERENSIASI MAJU==" << endl;
        cout << endl;
        cout << "Masukkan nilai awal x: ";
        cin >> x;
        cout << "Masukkan nilai awal y: ";
        cin >> y;
        cout << "Masukkan nilai h: ";
        cin >> h;
        cout << "Masukkan jumlah iterasi n: ";
        cin >> n;
        cout << endl;

        // Panggil fungsi untuk melakukan diferensiasi maju
        diferensiasiMaju(x, y, h, n);
        cout << endl;
        cout << "Diferensiasi Maju" << endl;
        break;

    case 2:
        cout << endl;
        cout << "==========================" << endl;
        cout << "==DIFFERENSIASI TENGAH==" << endl;
        cout << endl;
        cout << "Masukkan nilai x: ";
        cin >> x;
        cout << "Masukkan nilai y: ";
        cin >> y;
        cout << "Masukkan nilai h: ";
        cin >> h;
        cout << endl;

        // Panggil fungsi untuk melakukan diferensiasi tengah
        diferensiasiTengah(x, y, h);
        cout << endl;
        cout << "Diferensiasi Tengah" << endl;
        break;

    case 3:
        cout << endl;
        cout << "==========================" << endl;
        cout << "==DIFFERENSIASI MUNDUR==" << endl;
        cout << endl;
        cout << "Masukkan nilai x awal: ";
        cin >> x;
        cout << "Masukkan nilai y awal: ";
        cin >> y;
        cout << "Masukkan nilai h: ";
        cin >> h;
        cout << "Masukkan jumlah iterasi: ";
        cin >> n;
        cout << endl; 
        // Panggil fungsi untuk melakukan diferensiasi mundur
        diferensiasiMundur(x, y, h, n);
        cout << endl;
        cout << "Diferensiasi Mundur" << endl;
        break;

    default:
        cout << "Pilihan tidak valid!" << endl;
    }

    return 0;
}
